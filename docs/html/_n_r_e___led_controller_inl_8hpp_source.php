<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Micro: /mnt/c/Users/abell/Documents/GitHub/NRE-Micro/src/LED/Controller/NRE_LedControllerInl.hpp Source File</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_6b864641f3cab9a7d09fa51df47d12f6.php">LED</a></li><li class="navelem"><a class="el" href="dir_57532afd96e118b5b73bacfc38254880.php">Controller</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NRE_LedControllerInl.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_r_e___led_controller_inl_8hpp.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;     <span class="keyword">namespace </span><a class="code" href="namespace_n_r_e.php">NRE</a> {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;         <span class="keyword">namespace </span><a class="code" href="namespace_micro.php">Micro</a> {</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#afe2029cf34f87b8422d70af72a5ab753">   13</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#aca90a1d766338cd467cf927063643c99">LedController::LedController</a>(LedId nb, Pin pin, neoPixelType type) : controller(nb, pin, type), nbLeds(nb), lightEffect(nullptr) {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                leds = static_cast &lt;<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a>*&gt; (::operator <span class="keyword">new</span>(<span class="keyword">sizeof</span>(<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a>) * nb));</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                <span class="keywordflow">for</span> (LedId i = 0; i &lt; nbLeds; ++i) {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                    leds[i] = *(<span class="keyword">new</span>(&amp;leds[i]) <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a>(i, <span class="keyword">this</span>));</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                }</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;            }</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1c564c610021c5c9f24dfa8a61ea6faa">   20</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1c564c610021c5c9f24dfa8a61ea6faa">LedController::~LedController</a>() {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                <span class="keywordflow">for</span> (LedId i = 0; i &lt; nbLeds; ++i) {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                    leds[i].~Led();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                }</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                ::operator <span class="keyword">delete</span>(leds);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                <span class="keyword">delete</span> lightEffect;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                lightEffect = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a82eab1bb15dc21d04b5754d268ab8871">   29</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">LedController::Iterator</a> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a82eab1bb15dc21d04b5754d268ab8871">LedController::begin</a>() {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                <span class="keywordflow">return</span> leds;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#aeb0448b85aa79b202cac30fd94bb4e90">   33</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">LedController::ConstIterator</a> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a82eab1bb15dc21d04b5754d268ab8871">LedController::begin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">ConstIterator</a>(leds);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a73545f2926f3129379eef377c7123498">   37</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">LedController::ConstIterator</a> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a73545f2926f3129379eef377c7123498">LedController::cbegin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a82eab1bb15dc21d04b5754d268ab8871">begin</a>();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a14e9ce5ae98856abdef002abf9b6bde1">   41</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">LedController::Iterator</a> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a14e9ce5ae98856abdef002abf9b6bde1">LedController::end</a>() {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <span class="keywordflow">return</span> leds + nbLeds;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a9a34c7cebe81aeda12baa868ebc30ea7">   45</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">LedController::ConstIterator</a> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a14e9ce5ae98856abdef002abf9b6bde1">LedController::end</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">ConstIterator</a>(leds + nbLeds);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1a2cecffbe7a62ec3a352dbdb0e3a302">   49</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">LedController::ConstIterator</a> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1a2cecffbe7a62ec3a352dbdb0e3a302">LedController::cend</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a14e9ce5ae98856abdef002abf9b6bde1">end</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#acf67ef0f630bfc74d85ea0bb75e19c2c">   53</a></span>&#160;            <span class="keyword">inline</span> LedId <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#acf67ef0f630bfc74d85ea0bb75e19c2c">LedController::getCount</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="keywordflow">return</span> nbLeds;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#ab91228876528d9d66b1aa35b078b78e1">   57</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#ab91228876528d9d66b1aa35b078b78e1">LedController::turnOff</a>() {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                controller.clear();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                controller.show();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a0b8a39b1a9e132de0f7c2fc5127e8ab0">   62</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a0b8a39b1a9e132de0f7c2fc5127e8ab0">LedController::turnOn</a>() {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">for</span> (LedId i = 0; i &lt; nbLeds; ++i) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    controller.setPixelColor(i, leds[i].getColor());</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                controller.show();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a7829273c294972a1dcdc4e18e4cada12">   69</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#ab91228876528d9d66b1aa35b078b78e1">LedController::turnOff</a>(LedId <span class="keywordtype">id</span>) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                controller.setPixelColor(<span class="keywordtype">id</span>, BLACK.getColor());</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                controller.show();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a7f94593a8c490635293b7264f78b00a9">   74</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a0b8a39b1a9e132de0f7c2fc5127e8ab0">LedController::turnOn</a>(LedId <span class="keywordtype">id</span>) {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                controller.setPixelColor(<span class="keywordtype">id</span>, leds[<span class="keywordtype">id</span>].getColor());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                controller.show();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">   79</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">LedController::setColor</a>(<a class="code" href="class_n_r_e_1_1_micro_1_1_color.php">Color</a> <span class="keyword">const</span>&amp; color) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a> l : *<span class="keyword">this</span>) {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    l.<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php#a84e8281436fa31ffbb4eb39ef6aaba4b">setColor</a>(color);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                controller.fill(color.<a class="code" href="class_n_r_e_1_1_micro_1_1_color.php#a724e75202b5bdfc0b64e5c1b0d9a0e9f">getColor</a>(), 0, nbLeds);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                controller.show();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#ae0422cf79e9fc3a07ef687cf36c4047e">   87</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">LedController::setColor</a>(<a class="code" href="class_n_r_e_1_1_micro_1_1_observed_data.php">ObservedData&lt;Color&gt;</a> <span class="keyword">const</span>&amp; color) {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">setColor</a>(color.<a class="code" href="class_n_r_e_1_1_micro_1_1_observed_data.php#a31c5da057567efa27459fed706756764">get</a>());</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a848d4d85905377c7217d487d2cfc2715">   91</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">LedController::setColor</a>(LedId <span class="keywordtype">id</span>, <a class="code" href="class_n_r_e_1_1_micro_1_1_color.php">Color</a> <span class="keyword">const</span>&amp; color) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                leds[id].<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php#a84e8281436fa31ffbb4eb39ef6aaba4b">setColor</a>(color);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a0b8a39b1a9e132de0f7c2fc5127e8ab0">turnOn</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a78d0285e5ad30402d7b603873edb58eb">   96</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">LedController::setColor</a>(LedId <span class="keywordtype">id</span>, <a class="code" href="class_n_r_e_1_1_micro_1_1_observed_data.php">ObservedData&lt;Color&gt;</a> <span class="keyword">const</span>&amp; color) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">setColor</a>(<span class="keywordtype">id</span>, color.<a class="code" href="class_n_r_e_1_1_micro_1_1_observed_data.php#a31c5da057567efa27459fed706756764">get</a>());</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a5a9be90b32784cabe694d932ed6b5b18">  100</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a5a9be90b32784cabe694d932ed6b5b18">LedController::setColorHandle</a>(std::function&lt;<span class="keywordtype">void</span>(<a class="code" href="class_n_r_e_1_1_micro_1_1_color.php">Color</a>&amp;)&gt; handle) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a> l : *<span class="keyword">this</span>) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    l.<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php#a2624fb34732b14e2eb7f9880c99786cb">setColorHandle</a>(handle);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a7e62b5418e28db6f4b03a8f5a2e9e319">  106</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a5a9be90b32784cabe694d932ed6b5b18">LedController::setColorHandle</a>(LedId <span class="keywordtype">id</span>, std::function&lt;<span class="keywordtype">void</span>(<a class="code" href="class_n_r_e_1_1_micro_1_1_color.php">Color</a>&amp;)&gt; handle) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                leds[id].<a class="code" href="class_n_r_e_1_1_micro_1_1_led.php#a2624fb34732b14e2eb7f9880c99786cb">setColorHandle</a>(handle);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a8ab26b698dca92db0e453ba2faf4ee1a">  110</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a8ab26b698dca92db0e453ba2faf4ee1a">LedController::setEffect</a>(<a class="code" href="class_n_r_e_1_1_micro_1_1_effect.php">Effect</a>* effect) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">if</span> (lightEffect) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    lightEffect-&gt;<a class="code" href="class_n_r_e_1_1_micro_1_1_effect.php#a146b60fdfbad0c0b02fcbc37fe3c5043">stop</a>(*<span class="keyword">this</span>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    <span class="keyword">delete</span> lightEffect;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    lightEffect = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                lightEffect = effect;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                lightEffect-&gt;<a class="code" href="class_n_r_e_1_1_micro_1_1_effect.php#a5369c806d8afbfc2024b66ebcbbc1403">start</a>(*<span class="keyword">this</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1ef118da5781f891295f46efef4cde34">  120</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1ef118da5781f891295f46efef4cde34">LedController::setup</a>(<a class="code" href="class_n_r_e_1_1_micro_1_1_color.php">Color</a> <span class="keyword">const</span>&amp; startUpColor) {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                controller.begin();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">setColor</a>(startUpColor);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1682d49827b1228f5b5dbc3462131e5e">  125</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1682d49827b1228f5b5dbc3462131e5e">LedController::loop</a>() {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                lightEffect-&gt;<a class="code" href="class_n_r_e_1_1_micro_1_1_effect.php#a0c17b719e2f4974cfc75ba52b25adb83">run</a>(*<span class="keyword">this</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#aba2b3832cb7fa133b46382cfe5a1eae7">  129</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a>&amp; <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#aba2b3832cb7fa133b46382cfe5a1eae7">LedController::operator[]</a>(LedId index) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <span class="keywordflow">return</span> leds[index];</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_micro_1_1_led_controller.php#a5dd923c1d697f5f994197b66d65e2bdb">  133</a></span>&#160;            <span class="keyword">inline</span> <a class="code" href="class_n_r_e_1_1_micro_1_1_led.php">Led</a> <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_micro_1_1_led_controller.php#aba2b3832cb7fa133b46382cfe5a1eae7">LedController::operator[]</a>(LedId index)<span class="keyword"> const </span>{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="keywordflow">return</span> leds[index];</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;         }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;     }</div><div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_php"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led.php">NRE::Micro::Led</a></div><div class="ttdoc">Represent a single Led. </div><div class="ttdef"><b>Definition:</b> NRE_LedController.hpp:40</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_acf67ef0f630bfc74d85ea0bb75e19c2c"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#acf67ef0f630bfc74d85ea0bb75e19c2c">NRE::Micro::LedController::getCount</a></div><div class="ttdeci">LedId getCount() const </div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:53</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_color_php"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_color.php">NRE::Micro::Color</a></div><div class="ttdoc">Represent a led Color. </div><div class="ttdef"><b>Definition:</b> NRE_Color.hpp:32</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a1682d49827b1228f5b5dbc3462131e5e"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1682d49827b1228f5b5dbc3462131e5e">NRE::Micro::LedController::loop</a></div><div class="ttdeci">void loop()</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:125</div></div>
<div class="ttc" id="namespace_micro_php"><div class="ttname"><a href="namespace_micro.php">Micro</a></div><div class="ttdoc">Micro&amp;#39;s API. </div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_ab91228876528d9d66b1aa35b078b78e1"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#ab91228876528d9d66b1aa35b078b78e1">NRE::Micro::LedController::turnOff</a></div><div class="ttdeci">void turnOff()</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:57</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a89faff70fae2c66177362d25e6f1ce80"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a89faff70fae2c66177362d25e6f1ce80">NRE::Micro::LedController::setColor</a></div><div class="ttdeci">void setColor(Color const &amp;color)</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:79</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a73545f2926f3129379eef377c7123498"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a73545f2926f3129379eef377c7123498">NRE::Micro::LedController::cbegin</a></div><div class="ttdeci">ConstIterator cbegin() const </div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:37</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_php_a2624fb34732b14e2eb7f9880c99786cb"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led.php#a2624fb34732b14e2eb7f9880c99786cb">NRE::Micro::Led::setColorHandle</a></div><div class="ttdeci">void setColorHandle(std::function&lt; void(Color &amp;)&gt; handle)</div><div class="ttdef"><b>Definition:</b> NRE_LedInl.hpp:37</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a1ef118da5781f891295f46efef4cde34"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1ef118da5781f891295f46efef4cde34">NRE::Micro::LedController::setup</a></div><div class="ttdeci">void setup(Color const &amp;startUpColor=BLACK)</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:120</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_observed_data_php_a31c5da057567efa27459fed706756764"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_observed_data.php#a31c5da057567efa27459fed706756764">NRE::Micro::ObservedData::get</a></div><div class="ttdeci">T &amp; get()</div><div class="ttdef"><b>Definition:</b> NRE_ObservedDataInl.hpp:33</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_effect_php_a5369c806d8afbfc2024b66ebcbbc1403"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_effect.php#a5369c806d8afbfc2024b66ebcbbc1403">NRE::Micro::Effect::start</a></div><div class="ttdeci">virtual void start(LedController &amp;controller)=0</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a1c564c610021c5c9f24dfa8a61ea6faa"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1c564c610021c5c9f24dfa8a61ea6faa">NRE::Micro::LedController::~LedController</a></div><div class="ttdeci">~LedController()</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:20</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a14e9ce5ae98856abdef002abf9b6bde1"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a14e9ce5ae98856abdef002abf9b6bde1">NRE::Micro::LedController::end</a></div><div class="ttdeci">Iterator end()</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:41</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a5a9be90b32784cabe694d932ed6b5b18"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a5a9be90b32784cabe694d932ed6b5b18">NRE::Micro::LedController::setColorHandle</a></div><div class="ttdeci">void setColorHandle(std::function&lt; void(Color &amp;)&gt; handle)</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:100</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_aca90a1d766338cd467cf927063643c99"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#aca90a1d766338cd467cf927063643c99">NRE::Micro::LedController::LedController</a></div><div class="ttdeci">LedController()=delete</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_aba2b3832cb7fa133b46382cfe5a1eae7"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#aba2b3832cb7fa133b46382cfe5a1eae7">NRE::Micro::LedController::operator[]</a></div><div class="ttdeci">Led &amp; operator[](LedId index)</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:129</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a82eab1bb15dc21d04b5754d268ab8871"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a82eab1bb15dc21d04b5754d268ab8871">NRE::Micro::LedController::begin</a></div><div class="ttdeci">Iterator begin()</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:29</div></div>
<div class="ttc" id="namespace_n_r_e_php"><div class="ttname"><a href="namespace_n_r_e.php">NRE</a></div><div class="ttdoc">The NearlyRealEngine&amp;#39;s global namespace. </div><div class="ttdef"><b>Definition:</b> NRE_AbstractModule.cpp:12</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a8ab26b698dca92db0e453ba2faf4ee1a"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a8ab26b698dca92db0e453ba2faf4ee1a">NRE::Micro::LedController::setEffect</a></div><div class="ttdeci">void setEffect(Effect *effect)</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:110</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_php_a84e8281436fa31ffbb4eb39ef6aaba4b"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led.php#a84e8281436fa31ffbb4eb39ef6aaba4b">NRE::Micro::Led::setColor</a></div><div class="ttdeci">void setColor(Color const &amp;color)</div><div class="ttdef"><b>Definition:</b> NRE_LedInl.hpp:33</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a1a2cecffbe7a62ec3a352dbdb0e3a302"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a1a2cecffbe7a62ec3a352dbdb0e3a302">NRE::Micro::LedController::cend</a></div><div class="ttdeci">ConstIterator cend() const </div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:49</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_effect_php"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_effect.php">NRE::Micro::Effect</a></div><div class="ttdoc">Represent a light effect. </div><div class="ttdef"><b>Definition:</b> NRE_Effect.hpp:30</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_color_php_a724e75202b5bdfc0b64e5c1b0d9a0e9f"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_color.php#a724e75202b5bdfc0b64e5c1b0d9a0e9f">NRE::Micro::Color::getColor</a></div><div class="ttdeci">constexpr CompressedColor getColor() const </div><div class="ttdef"><b>Definition:</b> NRE_Color.hpp:89</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_effect_php_a146b60fdfbad0c0b02fcbc37fe3c5043"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_effect.php#a146b60fdfbad0c0b02fcbc37fe3c5043">NRE::Micro::Effect::stop</a></div><div class="ttdeci">virtual void stop(LedController &amp;controller)=0</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_observed_data_php"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_observed_data.php">NRE::Micro::ObservedData</a></div><div class="ttdoc">Represent an observed data by the internal ROM if used, allowing an automatic update between RAM and ...</div><div class="ttdef"><b>Definition:</b> NRE_RomManager.hpp:64</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_effect_php_a0c17b719e2f4974cfc75ba52b25adb83"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_effect.php#a0c17b719e2f4974cfc75ba52b25adb83">NRE::Micro::Effect::run</a></div><div class="ttdeci">virtual void run(LedController &amp;controller)=0</div></div>
<div class="ttc" id="class_n_r_e_1_1_micro_1_1_led_controller_php_a0b8a39b1a9e132de0f7c2fc5127e8ab0"><div class="ttname"><a href="class_n_r_e_1_1_micro_1_1_led_controller.php#a0b8a39b1a9e132de0f7c2fc5127e8ab0">NRE::Micro::LedController::turnOn</a></div><div class="ttdeci">void turnOn()</div><div class="ttdef"><b>Definition:</b> NRE_LedControllerInl.hpp:62</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
